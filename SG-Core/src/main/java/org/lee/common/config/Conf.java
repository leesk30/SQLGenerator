package org.lee.common.config;

public enum Conf {
    SYNTAX_TYPE,
    MAX_SUBQUERY_RECURSION_DEPTH,
    MAX_EXPRESSION_RECURSION_DEPTH,
    MAX_SETOP_RECURSION_DEPTH,
    CONVERT_TO_PARTITION_PROB(true),
    CONVERT_TO_PIVOTED_PROB(true),
    USING_VALUES_IN_FROM_PROBABILITY(true),
    USING_SUBQUERY_IN_FROM_PROBABILITY(true),
    MAX_FROM_CLAUSE_RTE_JOIN_NUM,
    MAX_RTE_JOIN_ENTRY_NUM,
    USING_MATERIALIZED_CTE_PROB(true),
    MAX_CONDITION_COMBINE_DEPTH,
    CONDITION_COMBINE_PROB(true),
    CONDITION_COMBINE_GROWTH_PROB(true),
    WITH_CTE_PROBABILITY(true),
    WHERE_CLAUSE_FUZZ_PROBABILITY(true),
    LIMIT_OFFSET_CLAUSE_FUZZ_PROBABILITY(true),
    LIMIT_OFFSET_WITH_OFFSET_PROBABILITY(true),
    GROUP_BY_CLAUSE_FUZZ_PROBABILITY(true),
    HAVING_CLAUSE_FUZZ_PROBABILITY(true),
    SORT_BY_CLAUSE_FUZZ_PROBABILITY(true),
    MAX_SELECT_WHERE_FILTER_NUM,
    MAX_SELECT_JOIN_FILTER_NUM,
    SELECT_JOIN_FILTER_APPEND_PROBABILITY(true),
    SELECT_WHERE_FILTER_APPEND_PROBABILITY(true),
    EXPRESSION_APPEND_AGGREGATION_PROB(true),
    EXPRESSION_RECURSION_PROBABILITY(true),
    VALUES_STATEMENT_AS_SUBQUERY_PROBABILITY(true),
    SETOP_STATEMENT_AS_SUBQUERY_PROBABILITY(true),
    PURE_SELECT_CLAUSE_AS_SUBQUERY_PROBABILITY(true),
    EXPRESSION_USING_SCALAR_SUBQUERY_PROBABILITY(true),
    ;
    // implement how to check value
    private final boolean isProbability;
    Conf(){
        this(false);
    }

    Conf(boolean isProbability){
        this.isProbability = isProbability;
    }

    public boolean isProb(){
        return isProbability;
    }
}
